#!/bin/sh

# Created with Random Explorer Benchmark Generator (version v0.0.1), seed 1 (MinSelectivity: 0.2, MaxSelectivity: 0.9, MaxChain: 3, MaxTries: 100, RandomBrowseProb: 0.05, GoBackProb: 0.2, Weighted-Paths: false, Predicates: [Exists,BoolEquality,IsString,IntEquality,FloatComparison,StrPrefix,ObjectSize,ArraySize])
jq -c 'inputs | select(( ( ( . | has("sparse_983") ) or ( . | has("sparse_293") ) ) or ( .bool == false ) ))' NoBench.json | jq -s -c 'def agg(s): reduce s as $x (0; . + ($x | .sparse_245 | 1));  group_by(.sparse_881) | map({group: .[0].sparse_881,  count: agg(.[])})'
jq -c 'inputs | select(( ( ( ( . | has("sparse_983") ) or ( . | has("sparse_293") ) ) or ( .bool == false ) ) and ( ( . | has("sparse_107") ) or ( .dyn1 <= 7769454.174206 ) ) ))' NoBench.json | jq -s -c 'def agg(s): reduce s as $x (0; . + 1);  group_by(.sparse_322) | map({group: .[0].sparse_322,  count: agg(.[])})'
jq -c 'inputs | select(( ( ( ( . | has("sparse_983") ) or ( . | has("sparse_293") ) ) or ( .bool == false ) ) and ( ( .sparse_603 | type == "string" ) or ( .dyn2 == false ) ) ))' NoBench.json | jq -s -c 'def agg(s): reduce s as $x (0; . + 1);  group_by(.sparse_865) | map({group: .[0].sparse_865,  count: agg(.[])})'
jq -c 'inputs | select(( ( ( ( ( . | has("sparse_983") ) or ( . | has("sparse_293") ) ) or ( .bool == false ) ) and ( ( .sparse_603 | type == "string" ) or ( .dyn2 == false ) ) ) and ( ( ( .sparse_646 | type == "string" ) or ( . | has("sparse_760") ) ) or ( .nested_obj.num <= 4945641.822877 ) ) ))' NoBench.json | jq -s -c 'def agg(s): reduce s as $x (0; . + ($x | .sparse_089 | 1));  group_by(.sparse_644) | map({group: .[0].sparse_644,  count: agg(.[])})'
jq -c 'inputs | select(( ( ( ( ( ( . | has("sparse_983") ) or ( . | has("sparse_293") ) ) or ( .bool == false ) ) and ( ( .sparse_603 | type == "string" ) or ( .dyn2 == false ) ) ) and ( ( ( .sparse_646 | type == "string" ) or ( . | has("sparse_760") ) ) or ( .nested_obj.num <= 4945641.822877 ) ) ) and ( ( ( . | has("sparse_305") ) or ( .sparse_122 | type == "string" ) ) or ( .nested_obj.num <= 2620025.938849 ) ) ))' NoBench.json | jq -s -c 'def agg(s): reduce s as $x (0; . + 1);  group_by(.sparse_226) | map({group: .[0].sparse_226,  count: agg(.[])})'
